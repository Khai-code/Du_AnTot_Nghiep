@inherits LayoutComponentBase
@using Database.DTOs
@using System.Text.Json
@inject HttpClient httpclient
<PageTitle>Blazor</PageTitle>

@* <div class="page">
    <div class="sidebar">
        < />
    </div> *@

<main class="container-fluid">
    <nav class="container-fluid sticky-top">
        <div class="row bg-light border-bottom align-items-center" style="height:85px">
            <div class="col-6 col-sm-3 col-md-2 ">
                <img src="img/Rectangle89.png" class="img-fluid" style="height:85px;" alt="" />
            </div>
            <div class="col-12 col-sm-6 col-md-7 pt-2">
                <ul class="nav justify-content-center">
                    <li class="nav-item d-flex">
                        <i class="bi bi-house-door-fill fs-4 text-primary"></i>
                        <a class="nav-link fw-bolder active text-black-50" aria-current="page" href="#">Trang chủ</a>
                    </li>
                    <li class="nav-item d-flex">
                        <i class="bi bi-mortarboard-fill fs-4 text-primary"></i>
                        <a class="nav-link fw-bolder text-black-50" href="#">Thi online</a>
                    </li>
                    <li class="nav-item d-flex">
                        <i class="bi bi-info-circle-fill fs-4 text-primary"></i>
                        <a class="nav-link fw-bolder text-black-50" href="#">Giới thiệu</a>
                    </li>
                    <li class="nav-item d-flex">
                        <i class="bi bi-person-rolodex fs-4 text-primary"></i>
                        <a class="nav-link fw-bolder text-black-50" aria-disabled="true">Liên hệ</a>
                    </li>
                </ul>
            </div>
            <div class="col-6 col-sm-3 col-md-2 pt-2 d-flex justify-content-end">
                <i class="bi bi-person-circle fs-2 text-primary"></i>
                <button class="btn fw-bold text-black-50">Đăng nhập</button>
            </div>
            <div class="col-1 col-md-1 pt-2 position-relative d-none d-md-block">
                <i class="bi bi-bell-fill fs-2 text-primary notification-icon"></i>
                    <!-- Badge hiển thị số lượng thông báo -->
                    <span class=" top-0 start-100 translate-middle badge rounded-pill bg-danger">
                        @unreadCount
                        <span class="visually-hidden">unread messages</span>
                    </span>
                    <ul class="notification-list position-absolute list-group">
                        @foreach (var item in data)
                        {
                            <li class="list-group-item fw-bold " style="height:100px" @onclick="() => HandleNotificationClick(item)">
                                
                                <i class="bi bi-megaphone text-danger"></i> @item.Title <br />
                                <p class="fw-light text-wrap">@ShortenContent(item.Content, 50)</p>
                                <p class="fs-6 fst-italic fw-light" style="padding-top:-10px">@item.CreationTime</p>
                            </li>
                        }
                    </ul>
            </div>
        </div>
    </nav>
    <!-- Article content -->
    <article class="content  px-4">
        @Body
    </article>
</main>
<!-- Footer -->
<footer class="container-fluid">
    <div class="row bg-dark-subtle py-3">
       <div class="col-4">
           <img class="w-50 h-100" style="margin-left:100px" src="img/Rectangle89.png" alt="Alternate Text" />
       </div>
       <div class="col-4 py-2">
           <div class="row">
               <p>Địa chỉ:</p>
           </div>
            <div class="row">
                <p>Số điện thoại:</p>
            </div>
            <div class="row">
                <p>Email:</p>
            </div>
            <div class="row">
                <p>Wepsite:</p>
            </div>
       </div>
    </div>
</footer>
@code {
    private List<NotificationDTO> data = new List<NotificationDTO>();
    private int unreadCount = 0;
    protected override async Task OnInitializedAsync()
    {

        data = await httpclient.GetFromJsonAsync<List<NotificationDTO>>("api/Notification/get-all-notification");
        unreadCount = data.Count;
    }
    private void HandleNotificationClick(NotificationDTO item)
    {
        // Xử lý click vào thông báo, xóa thông báo khỏi danh sách
        if (unreadCount > 0)
        {
            unreadCount--;
            StateHasChanged();
        }

        // Optional: Có thể cập nhật số lượng theo cách khác
        // data.Count được cập nhật tự động vì số lượng sẽ phụ thuộc vào độ dài của list 'data'
    }
    private string ShortenContent(string content, int maxLength)
    {
        if (string.IsNullOrEmpty(content))
        {
            return content;
        }
        // Kiểm tra độ dài nội dung, nếu vượt quá giới hạn, cắt ngắn và thêm "..."
        if (content.Length > maxLength)
        {
            return content.Substring(0, maxLength) + "...";
        }
        return content; // Trả về nguyên nội dung nếu không vượt quá giới hạn
    }
}
